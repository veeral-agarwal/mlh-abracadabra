{"ast":null,"code":"var _jsxFileName = \"/home/sahithi/testit/mlh-abracadabra/frontend/src/components/Common/Job_info.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/esm/Button';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nexport default class Job_info extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      applied_jobs: [],\n      job: [],\n      currentjob: [],\n      idid: '',\n      value: 0,\n      sop: '',\n      lololol: false,\n      status: 'not applied',\n      applicant_data: null\n    }; // this.apply_job = this.apply_job.bind(this);\n\n    this.onChangesop = this.onChangesop.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChangesop(event) {\n    this.setState({\n      sop: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('user_type') !== \"applicant\" && localStorage.getItem(\"isloggedin\") !== true) {\n      alert(\"please log in\");\n    } else {\n      console.log(\"ko\");\n      const chunk = {\n        id: this.props.match.params.id,\n        applicant_email: localStorage.getItem(\"user_email\") // recruiter_email: \n\n      };\n      console.log(chunk.id);\n      axios.post('http://localhost:4000/application/app_p_or_n', {\n        id: this.props.match.params.id\n      }).then(res => {\n        console.log(\"jii\");\n        var temper = 0; // for(var i = 0 ; i<res[\"data\"].length ; i++){\n        //     if(res[\"data\"][i][\"job_id\"] === this.props.match.params.id && res[\"data\"][i][\"applicant_email\"] === localStorage.getItem(\"user_email\") &&  res[\"data\"][i][\"status\"] === \"applied\"){\n        //         this.setState({lololol: true});\n        //         console.log(this.state.lololol)\n        //         break;\n        //     }\n        //     else{\n        //         temper = 0;\n        //         console.log(\"lop\")\n        //     }\n        // }\n\n        var rat = res.data;\n        console.log(rat.status);\n        if (res.data.status === \"applied\") this.setState({\n          lololol: true\n        });\n        console.log(this.state.lololol);\n      }).catch(err => {\n        console.log(err);\n      });\n      axios.post('http://localhost:4000/job/get_a_job_by_id', chunk).then(res => {\n        console.log(res.data);\n        this.setState({\n          job: res.data\n        });\n        this.setState({\n          lololol: true\n        });\n      }).catch(err => {\n        // if(err.response.data.message)\n        // alert(err.response.data.message);\n        console.log(err);\n      }); // getting the data of this applicant\n\n      const applicant_ka_data = {\n        applicant_ka_email: localStorage.getItem(\"user_email\")\n      };\n      axios.post('http://localhost:4000/applicant/get_an_applicant_by_email', applicant_ka_data).then(res => {\n        console.log(res.data);\n        this.setState({\n          applicant_data: res.data\n        });\n        this.setState({\n          lololol: true\n        });\n      }).catch(err => {\n        // if(err.response.data.message)\n        // alert(err.response.data.message);\n        console.log(err);\n      });\n    }\n  }\n\n  async onSubmit(e) {\n    e.preventDefault();\n    console.log(this.props.match.params.id);\n    const chunk = {\n      id: this.props.match.params.id\n    }; // console.log(temper)\n    // if(temper === 0){\n    // axios.post('http://localhost:4000/router/get_a_job_by_id', chunk)\n    //     .then(res => {\n    //         console.log(res.data);\n    //         this.setState({job: res.data});\n    //         this.setState({lololol: true});\n    //     })\n    //     .catch(err =>\n    //         {\n    //             // if(err.response.data.message)\n    //             // alert(err.response.data.message);\n    //             console.log(err)\n    //         });\n\n    var veer = true;\n\n    if (this.state.sop.split(' ').length > 250) {\n      window.alert(\"word limit crossed\");\n      veer = false;\n    } else if (veer && this.state.sop === '') {\n      window.alert(\"enter statement of purpose\");\n    } else if (this.state.applicant_data.application_count > 20) {\n      alert(\"max application limit reached\");\n    } else {\n      const yoyo = {\n        sop: this.state.sop,\n        email_recruiter: this.state.job.email_recruiter,\n        name_recruiter: this.state.job.name_recruiter,\n        deadline_of_application: this.state.job.deadline_of_application,\n        job_salary_per_month: this.state.job.salary_per_month,\n        status_of_job: this.state.job.status,\n        job_id: this.state.job._id,\n        applicant_email: localStorage.getItem(\"user_email\"),\n        status: \"applied\",\n        job_title: this.state.job.title,\n        name_applicant: localStorage.getItem(\"user_name\"),\n        skills: this.state.applicant_data.list_of_languages,\n        education: this.state.applicant_data.education,\n        job_type: this.state.job.type_of_job,\n        rating: this.state.applicant_data.rating\n      };\n      console.log(yoyo);\n      await axios.post('http://localhost:4000/application/addapplication', yoyo).then(res => {\n        console.log(res.data); // this.setState({jobs: res.data});\n      }).catch(err => {\n        console.log(err);\n      });\n      await axios.post('http://localhost:4000/applicant/increment_application_count', {\n        email: localStorage.getItem(\"user_email\")\n      }).then(res => {\n        console.log(res.data); // this.setState({jobs: res.data});\n      }).catch(err => {\n        console.log(err);\n      });\n      this.setState({\n        sop: ''\n      });\n      this.props.history.push('/search_job');\n    }\n  } // apply_job(e){\n  //     const datadata = {\n  //         applicant_email: localStorage.getItem('user_email'),\n  //         recruiter_email: this.state.job.email_recruiter,\n  //         job_id: this.props.match.params.id,\n  //     }\n  //     const u = this.props.match.params.yoyo;\n  //     console.log(u)\n  // }\n  // componentDidMount() {\n  //     const u = this.props.match.params.yoyo;\n  //     console.log(u)\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"sop: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.sop,\n      onChange: this.onChangesop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, console.log(this.state.lololol), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"add\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"hii\")));\n  }\n\n}","map":{"version":3,"sources":["/home/sahithi/testit/mlh-abracadabra/frontend/src/components/Common/Job_info.js"],"names":["React","Component","axios","PropTypes","Button","BrowserRouter","Router","Route","Link","Job_info","constructor","props","state","applied_jobs","job","currentjob","idid","value","sop","lololol","status","applicant_data","onChangesop","bind","onSubmit","event","setState","target","componentDidMount","localStorage","getItem","alert","console","log","chunk","id","match","params","applicant_email","post","then","res","temper","rat","data","catch","err","applicant_ka_data","applicant_ka_email","e","preventDefault","veer","split","length","window","application_count","yoyo","email_recruiter","name_recruiter","deadline_of_application","job_salary_per_month","salary_per_month","status_of_job","job_id","_id","job_title","title","name_applicant","skills","list_of_languages","education","job_type","type_of_job","rating","email","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/esm/Button';\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\n\nexport default class Job_info extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            applied_jobs:[],\n            job:[],\n            currentjob:[],\n            idid:'',\n            value:0,\n            sop:'',\n            lololol:false,\n            status:'not applied',\n            applicant_data:null,\n        }\n        // this.apply_job = this.apply_job.bind(this);\n        this.onChangesop = this.onChangesop.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChangesop(event){\n        this.setState({sop: event.target.value});\n    }\n\n    componentDidMount(){\n        if(localStorage.getItem('user_type') !== \"applicant\" && localStorage.getItem(\"isloggedin\") !== true){\n            alert(\"please log in\");\n        }\n        else{\n        console.log(\"ko\")\n        const chunk = { \n            id: this.props.match.params.id,\n            applicant_email: localStorage.getItem(\"user_email\"),\n            // recruiter_email: \n        }\n        console.log(chunk.id)\n        axios.post('http://localhost:4000/application/app_p_or_n',{id: this.props.match.params.id})\n        .then(res => {\n            console.log(\"jii\")\n            var temper = 0;\n            // for(var i = 0 ; i<res[\"data\"].length ; i++){\n            //     if(res[\"data\"][i][\"job_id\"] === this.props.match.params.id && res[\"data\"][i][\"applicant_email\"] === localStorage.getItem(\"user_email\") &&  res[\"data\"][i][\"status\"] === \"applied\"){\n            //         this.setState({lololol: true});\n            //         console.log(this.state.lololol)\n            //         break;\n            //     }\n            //     else{\n            //         temper = 0;\n            //         console.log(\"lop\")\n            //     }\n            // }\n            var rat = res.data;\n            console.log(rat.status)\n            if(res.data.status === \"applied\")\n            this.setState({lololol:true});\n            console.log(this.state.lololol)\n        })\n        .catch(err => {\n            console.log(err);\n        });\n        axios.post('http://localhost:4000/job/get_a_job_by_id', chunk)\n        .then(res => {\n            console.log(res.data);\n            this.setState({job: res.data});\n            \n            this.setState({lololol: true});\n        })\n        .catch(err =>\n            {\n                // if(err.response.data.message)\n                // alert(err.response.data.message);\n                console.log(err)\n        });\n\n        // getting the data of this applicant\n        const applicant_ka_data = {\n            applicant_ka_email: localStorage.getItem(\"user_email\")\n        }\n        axios.post('http://localhost:4000/applicant/get_an_applicant_by_email', applicant_ka_data)\n        .then(res => {\n            console.log(res.data);\n            this.setState({applicant_data: res.data});\n            \n            this.setState({lololol: true});\n        })\n        .catch(err =>\n            {\n                // if(err.response.data.message)\n                // alert(err.response.data.message);\n                console.log(err)\n        });\n    }\n    }    \n    \n    async onSubmit(e){\n        e.preventDefault();\n        console.log(this.props.match.params.id)        \n        const chunk = {\n            id: this.props.match.params.id\n        }\n        \n            // console.log(temper)\n            // if(temper === 0){\n                \n                // axios.post('http://localhost:4000/router/get_a_job_by_id', chunk)\n                //     .then(res => {\n                //         console.log(res.data);\n                //         this.setState({job: res.data});\n                        \n                //         this.setState({lololol: true});\n                //     })\n                //     .catch(err =>\n                //         {\n                //             // if(err.response.data.message)\n                //             // alert(err.response.data.message);\n                //             console.log(err)\n                //         });\n            var veer = true;\n\n            if(this.state.sop.split(' ').length>250){\n                window.alert(\"word limit crossed\");\n                veer = false;\n            }\n            else if(veer && this.state.sop === ''){\n                window.alert(\"enter statement of purpose\");\n            }\n            else if(this.state.applicant_data.application_count >20){\n                alert(\"max application limit reached\");\n            }\n            else{\n\n                \n\n\n                const yoyo = {\n                    sop: this.state.sop,\n                    email_recruiter: this.state.job.email_recruiter,\n                    name_recruiter: this.state.job.name_recruiter,\n                    deadline_of_application: this.state.job.deadline_of_application,\n                    job_salary_per_month: this.state.job.salary_per_month,\n                    status_of_job:this.state.job.status,\n                    job_id: this.state.job._id,\n                    applicant_email: localStorage.getItem(\"user_email\"),\n                    status: \"applied\",\n                    job_title: this.state.job.title,\n                    name_applicant:localStorage.getItem(\"user_name\"),\n                    skills: this.state.applicant_data.list_of_languages,\n                    education: this.state.applicant_data.education,\n                    job_type:this.state.job.type_of_job,\n                    rating: this.state.applicant_data.rating,\n                }\n                console.log(yoyo);\n                await axios.post('http://localhost:4000/application/addapplication', yoyo)\n                    .then(res => {\n                        console.log(res.data);\n                        // this.setState({jobs: res.data});\n                        \n                    })\n                    .catch(err =>\n                        {\n                            console.log(err)\n                        });\n                \n                \n                await axios.post('http://localhost:4000/applicant/increment_application_count', {email: localStorage.getItem(\"user_email\")})\n                .then(res => {\n                    console.log(res.data);\n                    // this.setState({jobs: res.data});\n                    \n                })\n                .catch(err =>\n                    {\n                        \n                        console.log(err)\n                    });\n\n                    this.setState({\n                        sop:''\n                    });\n                    this.props.history.push('/search_job');\n            }\n    }\n\n    // apply_job(e){\n    //     const datadata = {\n    //         applicant_email: localStorage.getItem('user_email'),\n    //         recruiter_email: this.state.job.email_recruiter,\n    //         job_id: this.props.match.params.id,\n\n    //     }\n    //     const u = this.props.match.params.yoyo;\n    //     console.log(u)\n    // }\n\n    // componentDidMount() {\n    //     const u = this.props.match.params.yoyo;\n    //     console.log(u)\n    // }\n\n    render() {\n\n        return (\n            \n            <div>\n                {/* {\n                    const kaha_jana = {\n                        pathname: \"/search_job\"\n                    }\n                } */}\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>sop: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.sop}\n                               onChange={this.onChangesop}\n                               />  \n                    </div>\n\n                    <div className=\"form-group\">{console.log(this.state.lololol)}\n                        {  <input  type=\"submit\" value=\"add\" className=\"btn btn-primary\"  /> }\n                    </div>\n                </form>\n                <div className=\"form-group\">\n                    <p>hii</p>\n\n                </div>\n            </div>\n        )\n\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}